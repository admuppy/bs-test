##app-config.yaml
app:
  title: Okestro Backstage App
  baseUrl: http://192.168.34.113:3000 ## 접속 오리진

organization:
  name: Okestro

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://192.168.34.113:7007 ## API
  listen:
    port: 7007
    host: 0.0.0.0
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    upgrade-insecure-requests: false
    #### 중요, 패키징 및 이미지 생성 과정에서 자동으로 http형식으로 저장된 주소값을 https로 바꿔 저장하는 경향이 있다.
    #### 그런 경우, firefox는 괜찮은 모양이지만 chrome 브라우저에서는 SSL에러가 발생해 자바를 위한 모듈들을 불러오지 못한다. 이 옵션을 false로 지정해야만 한다. 

    # Content-Security-Policy d:qirectives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors: #Cross-Origin Resource Sharing 웹 페이지가 다른 도메인의 리소스에 대한 요청을 제한하는 것이 기본이므로 허용을 위한 규칙 필요
    Origins: http://192.168.34.113:3000, http://192.168.34.113:7007
    methods: [GET, HEAD, OPTION, POST, PUT, DELETE] ##허용할 요청관련, OPTION 및 HEAD에 주목 ##CORS의 작동 방식 3가지 가운데, Preflight 즉 예비요청 작업을 사용하는 경우 OPTION이라는 요청이 사용됨
    credentials: true #true=include모든 요청에 대해 인증 정보 포함 / same-origin 같은 출처의 요청에만 / omit은 생략
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml

### 사용할 데이터베이스 지정 -> 기본값은 sqlite3로 노드메모리를 사용한다. pg를 사용하도록 아래와 같이 설정을 바꾼다면 packages/backend/Dockerfile에 있는 sqlite3를 설치하는 스크립트를 주석처리해도 된다.
  database:
    #client: better-sqlite3
    #connection: ':memory:'
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}

  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir
  cache: ##캐쉬 지정(옵션)
    store: memory

integrations:  #### 다양한 통합을 제공하는데, 토큰값을 변수로 지정한 후 시크릿과 디플로이의 envFrom옵션을 통해 밀어넣는 방식을 사용하면 쉽게 제어 가능)
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: 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
    ### Example for how to add your GitHub Enterprise instance using the API:
    # - host: ghe.example.net
    #   apiBaseUrl: https://ghe.example.net/api/v3
    #   token: ${GHE_TOKEN}

proxy:
  #'/circleci/api':
    #target: https://circleci.com/api/v1.1
    #headers:
    #Circle-Token: ${CIRCLECI_AUTH_TOKEN}
  #'/test':
    #target: 'https://example.com'
    #changeOrigin: true

  ### Example for how to add a proxy endpoint for the frontend.
  ### A typical reason to do this is to handle HTTPS and CORS for internal services.
  # endpoints:
  #   '/test':
  #     target: 'https://example.com'
  #     changeOrigin: true

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach

##테크닥스는 백스테이지 내장 문서형 코드 솔루션이다. 애드온 및 플러그인을 통해 기능을 커스터마이징해서 쓸 수 있다고 하며, github, bitbucket, azure devops, gitlab, gitea 등 소스 코드 호스팅 제공자와 호환가능하다고 함
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth: ## 인증수단을 지정하면 자동 로그인 등의 기능을 쉽게 이용할 수 있으나, 로그인 옵션을 사용하는 도중 꼬이는 부분이 많았음.
  # see https://backstage.io/docs/auth/ to learn about auth providers
  #environment: development
  providers:
    github:
      development:
        clientId: d602e2c855f479d1a9d1
        clientSecret: 0df21855eb84d1c905204ab142b44514adf6f800

scaffolder:
  github:
    token: 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
    visibility: public
  # see https://backstage.io/docs/features/software-templates/configuration for software template options


catalog: ### 카탈로그 추가는 여러가지 방식으로 가능한데, 깃허브 등 앞서 연동작업을 완료한 레포로 부터 카탈로그를 불러오는 방식, 로컬에 파일을 두고 컨피그 파일에 경로를 지정해 사용하는 방식 등이 있다. 또한 webui를 통한 추가도 가능.
  rules:
    - allow: [Component, System, API, Group, User, Resource, Location]
  locations:
    # Backstage example components
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-components.yaml

    # Backstage example systems
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-systems.yaml

    # Backstage example APIs
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-apis.yaml

    # Backstage example resources
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all-resources.yaml

    # Backstage example organization groups
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml

    # Backstage example templates
    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/react-ssr-template/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/springboot-grpc-template/template.yaml
    #- type: url
    #  target: https://github.com/spotify/cookiecutter-golang/blob/master/template.yaml
    #  rules:
    #    - allow: [Template]
    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/docs-template/template.yaml
      rules:
        - allow: [Template]
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml

    ## Uncomment these lines to add an example org
    # - type: url
    #   target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme-corp.yaml
    #   rules:
    #     - allow: [User, Group]



